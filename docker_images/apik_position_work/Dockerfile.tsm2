# We run an ubuntu arm64v8-based
FROM w251/pytorch:jup-tx2-4.3_b132

######### Step 0
######### Setup
# base URL for NVIDIA libs
ARG URL=http://169.44.201.108:7002/jetpacks/4.2
ARG DEBIAN_FRONTEND=noninteractive
WORKDIR /

# Install drivers first
RUN apt-get update
RUN apt-get install -y software-properties-common
RUN apt-get update && apt-get install -y \
    curl \
    git \
    python3.6 \
    python3-pip \
    python-opencv \
    python3-opencv \
    vim \
    unzip \
    cmake


######### Step 1 
######### Install opencv 4
RUN mkdir /my_opencv
COPY opencvinstall_script.sh  /my_opencv
RUN /my_opencv/opencvinstall_script.sh

######### Step 2
######### Set python

RUN export PYTHONPATH=/usr/bin/python3



######### Step 3
######### Install ONNX
RUN sudo apt-get install  -y --force-yes protobuf-compiler libprotoc-dev
RUN pip3 install onnx


######### Step 4
######### Build TVM
#################### DONT RUN THIS IN DOCKERFILE, RUN ONCE CONTAINER STARTS

#RUN  apt install -y --force-yes llvm # install llvm which is required by tvm
#RUN git clone https://github.com/apache/incubator-tvm.git
#WORKDIR incubator-tvm
#RUN git submodule update --init
#RUN mkdir build
#RUN cp cmake/config.cmake build/
#WORKDIR build
#[
#edit config.cmake to change
# 32 line: USE_CUDA OFF -> USE_CUDA ON
#104 line: USE_LLVM OFF -> USE_LLVM ON
#]


#RUN cmake ..
#RUN make -j4
#WORKDIR ..
#RUN cd python; sudo python3 setup.py install; cd ..
#RUN cd topi/python; sudo python3 setup.py install; cd ../..


######### Step 5
######### export cuda toolkit binary to path
#RUN export PATH=$PATH:/usr/local/cuda/bin
